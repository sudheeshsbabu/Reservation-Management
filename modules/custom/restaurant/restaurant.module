<?php

use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\paragraphs\Entity\Paragraph;

/**
 * restaurant_form_node_form_alter
 *
 * @param  mixed $form
 * @param  mixed $form_state
 * @param  mixed $form_id
 * @return void
 */
function restaurant_form_node_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'node_restaurant_form' || $form_id == 'node_restaurant_edit_form') {
    // Attach js library.
    $form['title']['#attached'] = array(
      'library' => array(
        'restaurant/restaurant_js',
      ),
    );
    if (isset($form['field_address'])) {
      $form['field_address']['#suffix'] = '<div id="set-time-slots">Set Time Slots</div>' ;
    }
  }
}

/**
 * restaurant_preprocess_page
 *
 * @param  mixed $variables
 * @return void
 */
function restaurant_preprocess_page(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name == 'entity.node.canonical') {
    $node = \Drupal::request()->attributes->get('node');
    if ($node && $node->id() == 1) {
      $variables['#attached']['library'][] = 'restaurant/calendar';
    }
  }
}

/**
 * restaurant_node_presave
 *
 * @param  mixed $node
 * @return void
 */
function restaurant_node_presave(NodeInterface $node) {
  $timeslots = [];
  $existing_pids = \Drupal::entityTypeManager()
  ->getStorage('paragraph')
  ->getQuery()
  ->condition('type', 'time_slot')
  ->condition('parent_id', $node->id())->execute();
  if ($existing_pids) {
    foreach ($existing_pids as $pid) {
      $timeslot = Paragraph::load($pid);
      $timeslots[] = [
        'target_id' => $timeslot->id(),
        'target_revision_id' => $timeslot->getRevisionId(),
      ];
    }
  }
  $pids = \Drupal::entityTypeManager()
  ->getStorage('paragraph')
  ->getQuery()
  ->condition('type', 'time_slot')
  ->notExists('parent_id')->execute();
  if ($pids) {
    foreach ($pids as $pid) {
      $timeslot = Paragraph::load($pid);
      $timeslots[] = [
        'target_id' => $timeslot->id(),
        'target_revision_id' => $timeslot->getRevisionId(),
      ];
    }
  }
  if ($timeslots) {
    $node->set('field_time_slots', $timeslots);
  }
}
